{"version":3,"sources":["hooks/useData/useData.js","hooks/useData/hooks/useTransformedData.js","hooks/useData/hooks/useRawData.js","hooks/useData/hooks/useFields.js","hooks/useData/services/selectFieldValueFunc.js","hooks/useData/services/clearFieldValuesFunc.js","hooks/useData/hooks/useFilteredData.js","components/Filter/Filter.js","components/DateFilter/DateFilter.js","routes/People/components/people-map/PeopleMap.js","routes/People/People.js","routes/People/hooks/useDateFilteredData.js","routes/People/hooks/useTransformedData.js","routes/People/hooks/useNestedData.js","routes/Letters/components/letter-map/LetterMap.js","routes/Letters/Letters.js","routes/Letters/hooks/useDateFilteredData.js","routes/Letters/hooks/useTransformedData.js","routes/Letters/hooks/useNestedData.js","routes/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["useData","_ref","source","headerMap","transformedData","rawData","_useState","useState","_useState2","Object","slicedToArray","setTransformedData","useEffect","data","map","row","keys","reduce","acc","key","objectSpread","defineProperty","column","useTransformedData","setRawData","csv","then","useRawData","_useFields","fields","setFields","from","columns","pipe","switchMap","value","selected","distinct","toArray","values","selections","field","subscribe","useFields","selectFieldValue","selectValue","newValues","filter","selectFieldValueFunc","clearFieldValues","clearFieldValuesFunc","filteredData","setFilteredData","available","i","length","indexOf","useFilteredData","withStyles","theme","root","marginTop","spacing","unit","marginLeft","marginRight","display","verticalAlign","formControl","margin","select","color","textField","width","outline","button","marginBottom","props","classes","fieldName","placeholder","clear","fieldValues","setFieldValues","_useState3","_useState4","searchQuery","setSearchQuery","toUpperCase","_useState5","_useState6","selectOpen","setSelectOpen","react_default","a","createElement","className","index_es","multiple","displayEmpty","onChange","event","nativeEvent","target","textContent","input","id","renderValue","join","open","onOpen","onClose","variant","size","onClick","TextField","TextFieldInput","label","defaultValue","setDate","type","InputLabelProps","shrink","InputProps","Date","concat","mapboxgl","accessToken","Map","setNotes","mapEl","useRef","undefined","setMap","mapLoaded","setMapLoaded","setTimeout","container","style","center","zoom","on","addSource","features","addLayer","paint","circle-radius","circle-color","lineMetrics","line-width","line-gradient","layout","line-join","line-cap","e","feature","properties","pointCollection","person","cities","city","geometry","coordinates","lon","lat","name","date","dateString","notes","flat","getSource","setData","lineCollection","paths","bezierSpline","lineWidth","ref","ListItemText","List","height","overflow","_useData","peopleHeaderMap","sourceData","_useDateFilteredData","minDate","setMinDate","maxDate","setMaxDate","dates","Math","min","apply","max","useDateFilteredData","dateFilteredData","nestedData","setNestedData","nest","d","entries","array","originCity","originLat","originLon","destinationCity","destinationLat","destinationLon","useNestedData","item","xs","Fragment","components_Filter_Filter","components_DateFilter_DateFilter","people_map_PeopleMap","component","note","primary","secondary","whiteSpace","path","letterCount","letters","JSON","parse","letterCountScale","scaleLog","domain","extent","range","collection","isNaN","originLatitude","originLongitude","destinationLatitude","destinationLongitude","letter","sender","recipient","Typography","startDates","startDate","endDates","endDate","startDateString","endDateString","rollup","lvs","letter_map_LetterMap","colorTextPrimary","withRouter","tabColor","palette","Tabs","backgroundColor","getContrastText","pathname","location","/","/letters","page","setPage","position","change","Link","to","react_router","exact","People","Letters","App","react_router_dom","routes_AppRouter","Boolean","window","hostname","match","createMuiTheme","lightBlue","typography","useNextVariants","ReactDOM","render","styles","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a2fd58d.chunk.js","sourcesContent":["import {\n\tuseRawData,\n\tuseTransformedData,\n\tuseFields,\n\tuseFilteredData,\n} from \"./hooks\"\nimport { selectFieldValueFunc, clearFieldValuesFunc } from \"./services\"\n\nexport default ({ source, headerMap }) => {\n\tconst rawData = useRawData(source)\n\tconst transformedData = useTransformedData({ rawData, headerMap })\n\tconst { fields, setFields } = useFields(transformedData)\n\tconst selectFieldValue = selectFieldValueFunc({ fields, setFields })\n\tconst clearFieldValues = clearFieldValuesFunc({ fields, setFields })\n\tconst filteredData = useFilteredData({ transformedData, fields })\n\n\treturn { data: filteredData, fields, selectFieldValue, clearFieldValues }\n}\n","import { useState, useEffect } from \"react\"\n\nexport default ({ rawData, headerMap }) => {\n\tconst [transformedData, setTransformedData] = useState(null)\n\n\tuseEffect(() => {\n\t\tif (rawData !== null) {\n\t\t\tconst data = rawData.map(row => {\n\t\t\t\treturn Object.keys(row).reduce((acc, key) => {\n\t\t\t\t\treturn headerMap[key]\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t\t[headerMap[key]]: row[key],\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t\t[key]: row[key],\n\t\t\t\t\t\t  }\n\t\t\t\t}, {})\n\t\t\t})\n\n\t\t\tdata[\"columns\"] = rawData[\"columns\"].map(column =>\n\t\t\t\theaderMap[column] ? headerMap[column] : column\n\t\t\t)\n\n\t\t\tsetTransformedData(data)\n\t\t}\n\t}, [rawData])\n\n\treturn transformedData\n}\n","import { useState, useEffect } from \"react\"\nimport { csv } from \"d3-fetch\"\n\nexport default source => {\n\tconst [rawData, setRawData] = useState(null)\n\n\tuseEffect(() => {\n\t\tcsv(source).then(setRawData)\n\t}, [])\n\n\treturn rawData\n}\n","import { useState, useEffect } from \"react\"\nimport { from } from \"rxjs\"\nimport { switchMap, map, distinct, toArray, reduce } from \"rxjs/operators\"\n\nexport default data => {\n\tconst [fields, setFields] = useState(null)\n\n\tuseEffect(() => {\n\t\tif (data !== null) {\n\t\t\t// for each data column..\n\t\t\tfrom(data.columns)\n\t\t\t\t.pipe(\n\t\t\t\t\t// switchMap to data rows\n\t\t\t\t\tswitchMap(column =>\n\t\t\t\t\t\t// for each data row..\n\t\t\t\t\t\tfrom(data).pipe(\n\t\t\t\t\t\t\t// map all values in a column\n\t\t\t\t\t\t\tmap(row => ({\n\t\t\t\t\t\t\t\tvalue: row[column],\n\t\t\t\t\t\t\t\tselected: false,\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t// get distinct value\n\t\t\t\t\t\t\tdistinct(row => row.value),\n\t\t\t\t\t\t\t// convert to array\n\t\t\t\t\t\t\ttoArray(),\n\t\t\t\t\t\t\t// create an entry for each field\n\t\t\t\t\t\t\tmap(values => ({\n\t\t\t\t\t\t\t\t[column]: {\n\t\t\t\t\t\t\t\t\tselections: [],\n\t\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\t// combine into single object\n\t\t\t\t\treduce(\n\t\t\t\t\t\t(acc, field) => ({\n\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t[Object.keys(field)[0]]: field[Object.keys(field)[0]],\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t{}\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.subscribe(setFields)\n\t\t}\n\t}, [data])\n\n\treturn { fields, setFields }\n}\n","export default ({ fields, setFields }) => {\n\tif (fields !== null) {\n\t\treturn (field, selectValue) => {\n\t\t\t// for each field value..\n\t\t\tconst newValues = fields[field].values.map(row => {\n\t\t\t\t// if this is the row that was selected..\n\t\t\t\tif (row.value === selectValue) {\n\t\t\t\t\t// swap the selected prop value\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: row.value,\n\t\t\t\t\t\tselected: !row.selected,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// else just return the row\n\t\t\t\telse {\n\t\t\t\t\treturn row\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t// set the field with new selections\n\t\t\tsetFields({\n\t\t\t\t...fields,\n\t\t\t\t[field]: {\n\t\t\t\t\tselections: newValues\n\t\t\t\t\t\t.filter(row => row.selected)\n\t\t\t\t\t\t.map(row => row.value),\n\t\t\t\t\tvalues: newValues,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t} else return () => {}\n}\n","export default ({ fields, setFields }) => {\n\tif (fields !== null) {\n\t\treturn field => {\n\t\t\t// for each field value, return false selected\n\t\t\tconst newValues = fields[field].values.map(row => ({\n\t\t\t\tvalue: row.value,\n\t\t\t\tselected: false,\n\t\t\t}))\n\n\t\t\t// set the field with cleared selections\n\t\t\tsetFields({\n\t\t\t\t...fields,\n\t\t\t\t[field]: {\n\t\t\t\t\tselections: [],\n\t\t\t\t\tvalues: newValues,\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t} else return () => {}\n}\n","import { useState, useEffect } from \"react\"\nimport { from } from \"rxjs\"\nimport { filter, toArray } from \"rxjs/operators\"\n\nexport default ({ transformedData, fields }) => {\n\tconst [filteredData, setFilteredData] = useState(null)\n\n\tuseEffect(() => {\n\t\tif (transformedData !== null && fields !== null) {\n\t\t\t// for each data row\n\t\t\tfrom(transformedData)\n\t\t\t\t.pipe(\n\t\t\t\t\t// filter anything de-selected\n\t\t\t\t\tfilter(row => {\n\t\t\t\t\t\t// get all the keys in the row\n\t\t\t\t\t\tconst keys = Object.keys(row)\n\t\t\t\t\t\tlet available = true\n\n\t\t\t\t\t\t// for each key..\n\t\t\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t// if the row's column is de-selected..\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tfields[keys[i]].selections.length &&\n\t\t\t\t\t\t\t\tfields[keys[i]].selections.indexOf(row[keys[i]]) === -1\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// make not available\n\t\t\t\t\t\t\t\tavailable = false\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn available\n\t\t\t\t\t}),\n\t\t\t\t\t// convert to array\n\t\t\t\t\ttoArray()\n\t\t\t\t)\n\t\t\t\t.subscribe(setFilteredData)\n\t\t}\n\t}, [transformedData, fields])\n\n\treturn filteredData\n}\n","import React, { useState, useEffect } from \"react\"\nimport {\n\twithStyles,\n\tFormControl,\n\tSelect,\n\tInput,\n\tMenuItem,\n\tTextField,\n\tButton,\n} from \"@material-ui/core\"\n\nconst styles = theme => ({\n\troot: {\n\t\tmarginTop: theme.spacing.unit * 3,\n\t\tmarginLeft: theme.spacing.unit * 3,\n\t\tmarginRight: theme.spacing.unit * 3,\n\t\tdisplay: \"inline-block\",\n\t\tverticalAlign: \"top\",\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing.unit,\n\t},\n\tselect: {\n\t\tcolor: \"#fff\",\n\t},\n\ttextField: {\n\t\tmarginLeft: theme.spacing.unit,\n\t\tmarginRight: theme.spacing.unit,\n\t\twidth: 200,\n\t\toutline: \"none\",\n\t},\n\tbutton: {\n\t\tmarginTop: theme.spacing.unit,\n\t\tmarginRight: theme.spacing.unit,\n\t\tmarginBottom: theme.spacing.unit,\n\t\tcolor: \"#fff\",\n\t},\n})\n\nconst Filter = props => {\n\tconst { classes, fields, fieldName, placeholder, select, clear } = props\n\n\tconst field = fields[fieldName]\n\n\tconst [fieldValues, setFieldValues] = useState(field.values)\n\tconst [searchQuery, setSearchQuery] = useState(\"\")\n\tuseEffect(() => {\n\t\tif (searchQuery === \"\") setFieldValues(field.values)\n\t\telse\n\t\t\tsetFieldValues(\n\t\t\t\tfield.values.filter(row => {\n\t\t\t\t\treturn row.value.toUpperCase().indexOf(searchQuery.toUpperCase()) > -1\n\t\t\t\t})\n\t\t\t)\n\t}, [searchQuery])\n\n\tconst [selectOpen, setSelectOpen] = useState(false)\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t<Select\n\t\t\t\t\tclassName={classes.select}\n\t\t\t\t\tmultiple\n\t\t\t\t\tdisplayEmpty\n\t\t\t\t\tvalue={field.selections}\n\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\tselect(fieldName, event.nativeEvent.target.textContent)\n\t\t\t\t\t}}\n\t\t\t\t\tinput={<Input id=\"select-multiple-placeholder\" />}\n\t\t\t\t\trenderValue={selected => {\n\t\t\t\t\t\tif (selected.length === 0) {\n\t\t\t\t\t\t\treturn <em>{placeholder}</em>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn selected.join(\", \")\n\t\t\t\t\t}}\n\t\t\t\t\topen={selectOpen}\n\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\tsetSelectOpen(true)\n\t\t\t\t\t}}\n\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\tsetSelectOpen(false)\n\t\t\t\t\t\tsetSearchQuery(\"\")\n\t\t\t\t\t}}\n\t\t\t\t\t// MenuProps={MenuProps}\n\t\t\t\t>\n\t\t\t\t\t{/* <MenuItem disabled value=\"\"> */}\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\tsetSearchQuery(event.target.value)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* </MenuItem> */}\n\t\t\t\t\t{fieldValues.map(value => (\n\t\t\t\t\t\t<MenuItem key={value.value} value={value.value}>\n\t\t\t\t\t\t\t{value.value}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t\t<Button\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tclassName={classes.button}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tclear(fieldName)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tClear\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n\nexport default withStyles(styles)(Filter)\n","import React from \"react\"\nimport { TextField, withStyles } from \"@material-ui/core\"\n\nconst styles = theme => ({\n\troot: {\n\t\tmarginTop: theme.spacing.unit * 3,\n\t\tmarginLeft: theme.spacing.unit * 3,\n\t\tdisplay: \"inline-block\",\n\t\tverticalAlign: \"top\",\n\t},\n\tTextField: {\n\t\twidth: 200,\n\t},\n\tTextFieldInput: {\n\t\tcolor: \"#fff\",\n\t},\n})\n\nconst DateFilter = props => {\n\tconst { classes, label, defaultValue, setDate } = props\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<form>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"date\"\n\t\t\t\t\tlabel={label}\n\t\t\t\t\ttype=\"date\"\n\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\tclassName={classes.TextField}\n\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\tclassName: classes.TextFieldInput,\n\t\t\t\t\t}}\n\t\t\t\t\tInputProps={{ className: classes.TextFieldInput }}\n\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\tsetDate(new Date(`${event.target.value} GMT-0500`))\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default withStyles(styles)(DateFilter)\n","import React, { useState, useEffect, useRef } from \"react\"\nimport mapboxgl from \"mapbox-gl\"\nimport { bezierSpline } from \"@turf/turf\"\n\nimport \"./PeopleMap.scss\"\n\nmapboxgl.accessToken = \"pk.eyJ1IjoiamJlbGxpenppIiwiYSI6ImNqb3Z6eHZreTFzZ3IzcHBia214M250cncifQ.562aUOGz7HteIUdtCdzDtA\"\n\nconst Map = props => {\n\tconst { data, setNotes } = props\n\n\t/**\n\t * Initialize\n\t */\n\tconst mapEl = useRef(null)\n\tconst [map, setMap] = useState(undefined)\n\tconst [mapLoaded, setMapLoaded] = useState(false)\n\tuseEffect(() => {\n\t\tif (mapEl !== null) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst map = new mapboxgl.Map({\n\t\t\t\t\tcontainer: \"map\",\n\t\t\t\t\tstyle: \"mapbox://styles/jbellizzi/cjow0pxqu41im2rqya3q7zazt\",\n\t\t\t\t\tcenter: [12, 48],\n\t\t\t\t\tzoom: 4.1,\n\t\t\t\t})\n\n\t\t\t\tsetMap(map)\n\n\t\t\t\tmap.on(\"load\", () => setMapLoaded(true))\n\t\t\t}, 1000)\n\t\t}\n\t}, [mapEl])\n\n\t/**\n\t * INITIALIZE LAYERS\n\t */\n\tuseEffect(() => {\n\t\tif (mapLoaded) {\n\t\t\t/** Point Source */\n\t\t\tmap.addSource(\"point\", {\n\t\t\t\ttype: \"geojson\",\n\t\t\t\tdata: {\n\t\t\t\t\ttype: \"FeatureCollection\",\n\t\t\t\t\tfeatures: [],\n\t\t\t\t},\n\t\t\t})\n\n\t\t\t/** Point Layer */\n\t\t\tmap.addLayer({\n\t\t\t\tid: \"point\",\n\t\t\t\tsource: \"point\",\n\t\t\t\ttype: \"circle\",\n\t\t\t\tpaint: {\n\t\t\t\t\t\"circle-radius\": 4,\n\t\t\t\t\t\"circle-color\": \"#D6F0FF\",\n\t\t\t\t},\n\t\t\t})\n\n\t\t\t/** Path Source */\n\t\t\tmap.addSource(\"line\", {\n\t\t\t\ttype: \"geojson\",\n\t\t\t\tlineMetrics: true,\n\t\t\t\tdata: {\n\t\t\t\t\ttype: \"FeatureCollection\",\n\t\t\t\t\tfeatures: [],\n\t\t\t\t},\n\t\t\t})\n\n\t\t\t/** Path Layer */\n\t\t\tmap.addLayer({\n\t\t\t\tid: \"line\",\n\t\t\t\ttype: \"line\",\n\t\t\t\tsource: \"line\",\n\t\t\t\tpaint: {\n\t\t\t\t\t\"line-width\": [\"get\", \"lineWidth\"],\n\t\t\t\t\t\"line-gradient\": [\"interpolate\", [\"linear\"], [\"line-progress\"], 0, \"#e0f7fa\", 0.5, \"#e0f7fa\", 1, \"#0097a7\"],\n\t\t\t\t},\n\t\t\t\tlayout: {\n\t\t\t\t\t\"line-join\": \"round\",\n\t\t\t\t\t\"line-cap\": \"round\",\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tmap.on(\"mouseenter\", \"point\", e => {\n\t\t\t\tsetNotes(e.features.map(feature => feature.properties))\n\t\t\t})\n\t\t}\n\t}, [mapLoaded])\n\n\t/** Set Data */\n\tuseEffect(() => {\n\t\tif (data !== null && mapLoaded) {\n\t\t\t/** Points */\n\t\t\tconst features = data\n\t\t\t\t.map(person =>\n\t\t\t\t\tperson.cities.map(city => ({\n\t\t\t\t\t\ttype: \"Feature\",\n\t\t\t\t\t\tgeometry: {\n\t\t\t\t\t\t\ttype: \"Point\",\n\t\t\t\t\t\t\tcoordinates: [city.lon, city.lat],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tname: person.name,\n\t\t\t\t\t\t\tdate: city.dateString,\n\t\t\t\t\t\t\tcity: city.name,\n\t\t\t\t\t\t\tnotes: city.notes,\n\t\t\t\t\t\t},\n\t\t\t\t\t}))\n\t\t\t\t)\n\t\t\t\t.flat()\n\n\t\t\tconst pointCollection = {\n\t\t\t\ttype: \"FeatureCollection\",\n\t\t\t\tfeatures,\n\t\t\t}\n\n\t\t\tmap.getSource(\"point\").setData(pointCollection)\n\n\t\t\t/** Paths */\n\t\t\tconst lines = data\n\t\t\t\t.filter(person => person.paths.length)\n\t\t\t\t.map(person =>\n\t\t\t\t\tperson.paths.map(row =>\n\t\t\t\t\t\tbezierSpline({\n\t\t\t\t\t\t\ttype: \"Feature\",\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\tlineWidth: 2,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgeometry: {\n\t\t\t\t\t\t\t\ttype: \"LineString\",\n\t\t\t\t\t\t\t\tcoordinates: [\n\t\t\t\t\t\t\t\t\t[row[\"originLon\"], row[\"originLat\"]],\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\trow[\"originLon\"] + (row[\"destinationLon\"] - row[\"originLon\"]) * (2 / 3),\n\t\t\t\t\t\t\t\t\t\trow[\"destinationLat\"] + (row[\"originLat\"] - row[\"destinationLat\"]) * (2 / 3),\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t[row[\"destinationLon\"], row[\"destinationLat\"]],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.flat()\n\n\t\t\tconst lineCollection = {\n\t\t\t\ttype: \"FeatureCollection\",\n\t\t\t\tfeatures: lines,\n\t\t\t}\n\n\t\t\tmap.getSource(\"line\").setData(lineCollection)\n\t\t}\n\t}, [mapLoaded, data])\n\n\treturn <div id=\"map\" ref={mapEl} />\n}\n\nexport default Map\n","import React, { useState, useEffect } from \"react\"\nimport { withStyles, Grid, List, ListItem, ListItemText } from \"@material-ui/core\"\n\nimport { useData } from \"../../hooks\"\nimport { Filter, DateFilter } from \"../../components\"\n\nimport PeopleMap from \"./components/people-map/PeopleMap\"\nimport { useTransformedData, useDateFilteredData, useNestedData } from \"./hooks\"\nimport peopleHeaderMap from \"./config/headerMap.json\"\n\n/** STYLE */\nconst styles = theme => ({\n\tListItemText: {\n\t\tcolor: \"#fff\",\n\t},\n\tList: {\n\t\theight: 800,\n\t\toverflow: \"auto\",\n\t},\n})\n\n/** COMPONENT */\nconst People = props => {\n\tconst { classes } = props\n\n\t/** Notes State */\n\tconst [notes, setNotes] = useState([])\n\n\t/** Get source data */\n\tconst { data: sourceData, fields, selectFieldValue, clearFieldValues } = useData({\n\t\tsource: \"./data/people.csv\",\n\t\theaderMap: peopleHeaderMap,\n\t})\n\n\t/** Transform Data */\n\tconst transformedData = useTransformedData(sourceData)\n\n\t/** Date Filter Data */\n\tconst { data: dateFilteredData, setMinDate, setMaxDate } = useDateFilteredData(transformedData)\n\n\t/** Nest Data */\n\tconst data = useNestedData(dateFilteredData)\n\n\treturn (\n\t\t<div>\n\t\t\t<Grid container spacing={24}>\n\t\t\t\t{/* Filters */}\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t{/* Person */}\n\t\t\t\t\t{fields !== null ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Filter\n\t\t\t\t\t\t\t\tfields={fields}\n\t\t\t\t\t\t\t\tfieldName=\"person\"\n\t\t\t\t\t\t\t\tplaceholder=\"Person\"\n\t\t\t\t\t\t\t\tselect={selectFieldValue}\n\t\t\t\t\t\t\t\tclear={clearFieldValues}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Filter\n\t\t\t\t\t\t\t\tfields={fields}\n\t\t\t\t\t\t\t\tfieldName=\"city\"\n\t\t\t\t\t\t\t\tplaceholder=\"City\"\n\t\t\t\t\t\t\t\tselect={selectFieldValue}\n\t\t\t\t\t\t\t\tclear={clearFieldValues}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t{/* Start Date */}\n\t\t\t\t\t<DateFilter label=\"Start Date\" defaultValue=\"1660-01-01\" setDate={setMinDate} />\n\n\t\t\t\t\t{/* End Date */}\n\t\t\t\t\t<DateFilter label=\"End Date\" defaultValue=\"1699-12-31\" setDate={setMaxDate} />\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* Map */}\n\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t<PeopleMap data={data} setNotes={setNotes} />\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* Notes */}\n\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t<List component=\"nav\" className={classes.List}>\n\t\t\t\t\t\t{notes.map((note, i) => (\n\t\t\t\t\t\t\t<ListItem key={i}>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\t\t\tprimary: classes.ListItemText,\n\t\t\t\t\t\t\t\t\t\tsecondary: classes.ListItemText,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tstyle={{ whiteSpace: \"pre-line\" }}\n\t\t\t\t\t\t\t\t\tprimary={`${note.name} (${note.date})`}\n\t\t\t\t\t\t\t\t\tsecondary={`${note.city} ${note.notes.length ? `\\nnotes: ${note.notes}` : \"\"}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</List>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t)\n}\n\nexport default withStyles(styles)(People)\n","import { useState, useEffect } from \"react\"\n\nexport default data => {\n\t/** State */\n\tconst [minDate, setMinDate] = useState(null)\n\tconst [maxDate, setMaxDate] = useState(null)\n\n\t/** Initialize dates */\n\tuseEffect(() => {\n\t\tif (data !== null) {\n\t\t\t/** get array of dates */\n\t\t\tconst dates = data.map(row => row.date)\n\n\t\t\tsetMinDate(Math.min.apply(null, dates))\n\t\t\tsetMaxDate(Math.max.apply(null, dates))\n\t\t}\n\t}, [data])\n\n\t/** Filter Data */\n\tconst [filteredData, setFilteredData] = useState(null)\n\tuseEffect(() => {\n\t\tif (minDate !== null && maxDate !== null) {\n\t\t\tsetFilteredData(\n\t\t\t\t/** Filter out if date is less than min date or\n\t\t\t\t * greater than max date\n\t\t\t\t */\n\t\t\t\tdata.filter(row => {\n\t\t\t\t\treturn row.date >= minDate && row.date <= maxDate\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}, [minDate, maxDate, data])\n\n\treturn { data: filteredData, setMinDate, setMaxDate }\n}\n","import { useState, useEffect } from \"react\"\n\nexport default data => {\n\t/** State */\n\tconst [transformedData, setTransformedData] = useState(null)\n\n\tuseEffect(() => {\n\t\tif (data !== null) {\n\t\t\t/** turn lat and long numeric, and convert\n\t\t\t * dateString to date\n\t\t\t */\n\t\t\tsetTransformedData(\n\t\t\t\tdata.map(row => ({\n\t\t\t\t\t...row,\n\t\t\t\t\tlat: +row.lat,\n\t\t\t\t\tlon: +row.lon,\n\t\t\t\t\tdateString: row.date,\n\t\t\t\t\tdate: new Date(`${row.date} GMT-0457`),\n\t\t\t\t}))\n\t\t\t)\n\t\t}\n\t}, [data])\n\n\treturn transformedData\n}\n","import { useState, useEffect } from \"react\"\nimport { nest } from \"d3-collection\"\n\nexport default data => {\n\t/** State */\n\tconst [nestedData, setNestedData] = useState(null)\n\n\tuseEffect(() => {\n\t\tif (data !== null) {\n\t\t\t/** Nest data by person */\n\t\t\tsetNestedData(\n\t\t\t\tnest()\n\t\t\t\t\t.key(d => d.person)\n\t\t\t\t\t.entries(data)\n\t\t\t\t\t/** Map nested people into format\n\t\t\t\t\t * {\n\t\t\t\t\t *  @String name,\n\t\t\t\t\t *  @Array cities,\n\t\t\t\t\t *  @Array paths\n\t\t\t\t\t * }\n\t\t\t\t\t */\n\t\t\t\t\t.map(person => ({\n\t\t\t\t\t\tname: person.key,\n\t\t\t\t\t\tcities: person.values.map(row => ({\n\t\t\t\t\t\t\tname: row.city,\n\t\t\t\t\t\t\tdateString: row.dateString,\n\t\t\t\t\t\t\tdate: row.date,\n\t\t\t\t\t\t\tlat: row.lat,\n\t\t\t\t\t\t\tlon: row.lon,\n\t\t\t\t\t\t\tnotes: row.notes,\n\t\t\t\t\t\t})),\n\t\t\t\t\t\tpaths: person.values\n\t\t\t\t\t\t\t/** Only create new path record if it's not the first\n\t\t\t\t\t\t\t *  city, and the new city is different than the\n\t\t\t\t\t\t\t *  prior city\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t.filter((row, i, array) => {\n\t\t\t\t\t\t\t\tif (i === 0) return null\n\t\t\t\t\t\t\t\telse return row.city !== array[i - 1].city\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t/** Return null for first city (as there's no\n\t\t\t\t\t\t\t *  originCity to calculate for the first record) */\n\t\t\t\t\t\t\t.map((row, i, array) => {\n\t\t\t\t\t\t\t\tif (i === 0) return null\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\toriginCity: array[i - 1].city,\n\t\t\t\t\t\t\t\t\t\toriginLat: array[i - 1].lat,\n\t\t\t\t\t\t\t\t\t\toriginLon: array[i - 1].lon,\n\t\t\t\t\t\t\t\t\t\tdestinationCity: row.city,\n\t\t\t\t\t\t\t\t\t\tdestinationLat: row.lat,\n\t\t\t\t\t\t\t\t\t\tdestinationLon: row.lon,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t/** Remove the null record */\n\t\t\t\t\t\t\t.filter(row => row !== null),\n\t\t\t\t\t}))\n\t\t\t)\n\t\t}\n\t}, [data])\n\n\treturn nestedData\n}\n","import React, { useState, useEffect, useRef } from \"react\"\n\nimport { extent } from \"d3-array\"\nimport { scaleLog } from \"d3-scale\"\n\nimport mapboxgl from \"mapbox-gl\"\nimport { bezierSpline } from \"@turf/turf\"\n\nimport \"./LetterMap.scss\"\n\nmapboxgl.accessToken =\n\t\"pk.eyJ1IjoiamJlbGxpenppIiwiYSI6ImNqb3Z6eHZreTFzZ3IzcHBia214M250cncifQ.562aUOGz7HteIUdtCdzDtA\"\n\nconst Map = props => {\n\tconst { data, setNotes } = props\n\n\t/** INITIALIZE */\n\tconst mapEl = useRef(null)\n\tconst [map, setMap] = useState(null)\n\tconst [mapLoaded, setMapLoaded] = useState(false)\n\n\tuseEffect(() => {\n\t\tif (mapEl !== null) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst map = new mapboxgl.Map({\n\t\t\t\t\tcontainer: \"map\",\n\t\t\t\t\tstyle: \"mapbox://styles/jbellizzi/cjow0pxqu41im2rqya3q7zazt\",\n\t\t\t\t\tcenter: [12, 48],\n\t\t\t\t\tzoom: 4.1,\n\t\t\t\t})\n\n\t\t\t\tsetMap(map)\n\n\t\t\t\tmap.on(\"load\", () => setMapLoaded(true))\n\t\t\t})\n\t\t}\n\t}, [mapEl])\n\n\t/** INITIALIZE LAYERS */\n\tuseEffect(() => {\n\t\tif (mapLoaded) {\n\t\t\t/** Source */\n\t\t\tmap.addSource(\"line\", {\n\t\t\t\ttype: \"geojson\",\n\t\t\t\tlineMetrics: true,\n\t\t\t\tdata: {\n\t\t\t\t\ttype: \"FeatureCollection\",\n\t\t\t\t\tfeatures: [],\n\t\t\t\t},\n\t\t\t})\n\n\t\t\t/** Layer */\n\t\t\tmap.addLayer({\n\t\t\t\tid: \"line\",\n\t\t\t\ttype: \"line\",\n\t\t\t\tsource: \"line\",\n\t\t\t\tpaint: {\n\t\t\t\t\t\"line-width\": [\"get\", \"lineWidth\"],\n\t\t\t\t\t\"line-gradient\": [\n\t\t\t\t\t\t\"interpolate\",\n\t\t\t\t\t\t[\"linear\"],\n\t\t\t\t\t\t[\"line-progress\"],\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t\"#e0f7fa\",\n\t\t\t\t\t\t0.5,\n\t\t\t\t\t\t\"#e0f7fa\",\n\t\t\t\t\t\t1,\n\t\t\t\t\t\t\"#0097a7\",\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tlayout: {\n\t\t\t\t\t\"line-join\": \"round\",\n\t\t\t\t\t\"line-cap\": \"round\",\n\t\t\t\t},\n\t\t\t})\n\n\t\t\t/** Mouseenter */\n\t\t\tmap.on(\"mouseenter\", \"line\", e => {\n\t\t\t\tconst props = e.features[0].properties\n\n\t\t\t\tconst notes = {\n\t\t\t\t\tpath: props.path,\n\t\t\t\t\tletterCount: props.letterCount,\n\t\t\t\t\tletters: JSON.parse(props.letters),\n\t\t\t\t}\n\n\t\t\t\tsetNotes(notes)\n\t\t\t})\n\t\t}\n\t}, [mapLoaded])\n\n\t/** RENDER */\n\tuseEffect(() => {\n\t\tif (mapLoaded && data !== null) {\n\t\t\tconst letterCountScale = scaleLog()\n\t\t\t\t.domain(extent(data, row => row.letterCount))\n\t\t\t\t.range([1, 15])\n\n\t\t\tconst lines = data\n\t\t\t\t.filter(\n\t\t\t\t\trow =>\n\t\t\t\t\t\t!isNaN(row.originLatitude) &&\n\t\t\t\t\t\t!isNaN(row.originLongitude) &&\n\t\t\t\t\t\t!isNaN(row.destinationLatitude) &&\n\t\t\t\t\t\t!isNaN(row.destinationLongitude)\n\t\t\t\t)\n\t\t\t\t.map(row =>\n\t\t\t\t\tbezierSpline({\n\t\t\t\t\t\ttype: \"Feature\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlineWidth: letterCountScale(row.letterCount),\n\t\t\t\t\t\t\tpath: row.path,\n\t\t\t\t\t\t\tletterCount: row.letterCount,\n\t\t\t\t\t\t\tletters: row.letters.map(letter => ({\n\t\t\t\t\t\t\t\tdateString: letter.dateString,\n\t\t\t\t\t\t\t\tsender: letter.sender,\n\t\t\t\t\t\t\t\trecipient: letter.recipient,\n\t\t\t\t\t\t\t\tnotes: letter.notes,\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgeometry: {\n\t\t\t\t\t\t\ttype: \"LineString\",\n\t\t\t\t\t\t\tcoordinates: [\n\t\t\t\t\t\t\t\t[row.originLongitude, row.originLatitude],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\trow.originLongitude +\n\t\t\t\t\t\t\t\t\t\t(row.destinationLongitude - row.originLongitude) * (2 / 3),\n\t\t\t\t\t\t\t\t\trow.destinationLatitude +\n\t\t\t\t\t\t\t\t\t\t(row.originLatitude - row.destinationLatitude) * (2 / 3),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[row.destinationLongitude, row.destinationLatitude],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t)\n\n\t\t\tconst collection = {\n\t\t\t\ttype: \"FeatureCollection\",\n\t\t\t\tfeatures: lines,\n\t\t\t}\n\n\t\t\tmap.getSource(\"line\").setData(collection)\n\t\t}\n\t}, [mapLoaded, data])\n\n\treturn <div id=\"map\" ref={mapEl} />\n}\n\nexport default Map\n","import React, { useState } from \"react\"\nimport {\n\twithStyles,\n\tGrid,\n\tList,\n\tListItem,\n\tListItemText,\n\tTypography,\n} from \"@material-ui/core\"\nimport { useData } from \"../../hooks\"\nimport { Filter, DateFilter } from \"../../components\"\n\nimport { useTransformedData, useDateFilteredData, useNestedData } from \"./hooks\"\nimport LetterMap from \"./components/letter-map/LetterMap\"\nimport headerMap from \"./config/headerMap.json\"\n\n/** STYLE */\nconst styles = theme => ({\n\tList: {\n\t\theight: 800,\n\t\toverflow: \"auto\",\n\t},\n\tListItemText: {\n\t\tcolor: \"#fff\",\n\t},\n\tTypography: {\n\t\tcolor: \"#fff\",\n\t},\n})\n\n/** COMPONENT */\nconst Letters = props => {\n\tconst { classes } = props\n\n\t/** Notes State */\n\tconst [notes, setNotes] = useState(null)\n\n\t/** Get source data */\n\tconst {\n\t\tdata: sourceData,\n\t\tfields,\n\t\tselectFieldValue,\n\t\tclearFieldValues,\n\t} = useData({\n\t\tsource: \"./data/letters.csv\",\n\t\theaderMap,\n\t})\n\n\t/** Transform Data */\n\tconst transformedData = useTransformedData(sourceData)\n\n\t/** Date Filter Data */\n\tconst {\n\t\tdata: dateFilteredData,\n\t\tsetMinDate,\n\t\tsetMaxDate,\n\t} = useDateFilteredData(transformedData)\n\n\t/** Nest Data */\n\tconst data = useNestedData(dateFilteredData)\n\n\tconst filters = [\n\t\t{ fieldName: \"originCity\", placeholder: \"Origin City\" },\n\t\t{ fieldName: \"destinationCity\", placeholder: \"Destination City\" },\n\t\t{ fieldName: \"sender\", placeholder: \"Sender\" },\n\t\t{ fieldName: \"recipient\", placeholder: \"Recipient\" },\n\t]\n\n\t/** Render */\n\treturn (\n\t\t<div>\n\t\t\t<Grid container spacing={24}>\n\t\t\t\t{/* Filters */}\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t{/* Start Date */}\n\t\t\t\t\t<DateFilter\n\t\t\t\t\t\tlabel=\"Start Date\"\n\t\t\t\t\t\tdefaultValue=\"1600-01-01\"\n\t\t\t\t\t\tsetDate={setMinDate}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{/* End Date */}\n\t\t\t\t\t<DateFilter\n\t\t\t\t\t\tlabel=\"End Date\"\n\t\t\t\t\t\tdefaultValue=\"1699-12-31\"\n\t\t\t\t\t\tsetDate={setMaxDate}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{/* Fields */}\n\t\t\t\t\t{fields !== null\n\t\t\t\t\t\t? filters.map((filter, i) => (\n\t\t\t\t\t\t\t\t<Filter\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tfields={fields}\n\t\t\t\t\t\t\t\t\tfieldName={filter.fieldName}\n\t\t\t\t\t\t\t\t\tplaceholder={filter.placeholder}\n\t\t\t\t\t\t\t\t\tselect={selectFieldValue}\n\t\t\t\t\t\t\t\t\tclear={clearFieldValues}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  ))\n\t\t\t\t\t\t: null}\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* Map */}\n\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t<LetterMap data={data} setNotes={setNotes} />\n\t\t\t\t</Grid>\n\n\t\t\t\t{/* Info */}\n\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t{notes !== null ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\t\t\t\tclasses={{ colorTextPrimary: classes.Typography }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{notes.path} ({notes.letterCount})\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<List component=\"nav\" className={classes.List}>\n\t\t\t\t\t\t\t\t{notes.letters.map((note, i) => (\n\t\t\t\t\t\t\t\t\t<ListItem key={i}>\n\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\t\t\t\t\tprimary: classes.ListItemText,\n\t\t\t\t\t\t\t\t\t\t\t\tsecondary: classes.ListItemText,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ whiteSpace: \"pre-line\" }}\n\t\t\t\t\t\t\t\t\t\t\tprimary={`${note.dateString}\\n${note.sender} -> ${\n\t\t\t\t\t\t\t\t\t\t\t\tnote.recipient\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t\t\t\t\tnote.notes.length ? `\\nnotes: ${note.notes}` : \"\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t)\n}\n\nexport default withStyles(styles)(Letters)\n","import { useState, useEffect } from \"react\"\n\nexport default data => {\n\t/** State */\n\tconst [minDate, setMinDate] = useState(null)\n\tconst [maxDate, setMaxDate] = useState(null)\n\n\t/** Initialize dates */\n\tuseEffect(() => {\n\t\tif (data !== null) {\n\t\t\t/** get array of dates */\n\t\t\tconst startDates = data.map(row => row.startDate)\n\t\t\tconst endDates = data.map(row => row.endDate)\n\n\t\t\tsetMinDate(Math.min.apply(null, startDates))\n\t\t\tsetMaxDate(Math.max.apply(null, endDates))\n\t\t}\n\t}, [data])\n\n\t/** Filter Data */\n\tconst [filteredData, setFilteredData] = useState(null)\n\n\tuseEffect(() => {\n\t\tif (minDate !== null && maxDate !== null) {\n\t\t\tsetFilteredData(\n\t\t\t\t/** Filter out if startDate is greater than maxDate\n\t\t\t\t * or endDate is less than minDate\n\t\t\t\t */\n\t\t\t\tdata.filter(row => !(row.startDate > maxDate || row.endDate < minDate))\n\t\t\t)\n\t\t}\n\t}, [minDate, maxDate])\n\n\treturn { data: filteredData, setMinDate, setMaxDate }\n}\n","import { useState, useEffect } from \"react\"\n\nexport default data => {\n\t/** State */\n\tconst [transformedData, setTransformedData] = useState(null)\n\n\tuseEffect(() => {\n\t\tif (data !== null) {\n\t\t\t/** turn lat and long numeric\n\t\t\t * turn start and end dates into dates\n\t\t\t */\n\t\t\tsetTransformedData(\n\t\t\t\tdata.map(row => ({\n\t\t\t\t\t...row,\n\t\t\t\t\tpath: `${row.originCity} -> ${row.destinationCity}`,\n\t\t\t\t\toriginLatitude: +row.originLatitude,\n\t\t\t\t\toriginLongitude: +row.originLongitude,\n\t\t\t\t\tdestinationLatitude: +row.destinationLatitude,\n\t\t\t\t\tdestinationLongitude: +row.destinationLongitude,\n\t\t\t\t\tstartDate: new Date(`${row.startDateString} GMT-0457`),\n\t\t\t\t\tendDate: new Date(`${row.endDateString} GMT-0457`),\n\t\t\t\t}))\n\t\t\t)\n\t\t}\n\t}, [data])\n\n\treturn transformedData\n}\n","import { useState, useEffect } from \"react\"\nimport { nest } from \"d3-collection\"\n\nexport default data => {\n\t/** State */\n\tconst [nestedData, setNestedData] = useState(null)\n\n\tuseEffect(() => {\n\t\tif (data !== null) {\n\t\t\t/** Nest data by path */\n\t\t\tsetNestedData(\n\t\t\t\tnest()\n\t\t\t\t\t.key(d => d.path)\n\t\t\t\t\t.rollup(lvs => ({\n\t\t\t\t\t\tletterCount: lvs.length,\n\t\t\t\t\t\toriginLatitude: lvs[0].originLatitude,\n\t\t\t\t\t\toriginLongitude: lvs[0].originLongitude,\n\t\t\t\t\t\tdestinationLatitude: lvs[0].destinationLatitude,\n\t\t\t\t\t\tdestinationLongitude: lvs[0].destinationLongitude,\n\t\t\t\t\t\tletters: lvs,\n\t\t\t\t\t}))\n\t\t\t\t\t.entries(data)\n\t\t\t\t\t.map(row => ({\n\t\t\t\t\t\tpath: row.key,\n\t\t\t\t\t\toriginLatitude: row.value.originLatitude,\n\t\t\t\t\t\toriginLongitude: row.value.originLongitude,\n\t\t\t\t\t\tdestinationLatitude: row.value.destinationLatitude,\n\t\t\t\t\t\tdestinationLongitude: row.value.destinationLongitude,\n\t\t\t\t\t\tletterCount: row.value.letterCount,\n\t\t\t\t\t\tletters: row.value.letters,\n\t\t\t\t\t}))\n\t\t\t)\n\t\t}\n\t}, [data])\n\n\treturn nestedData\n}\n","import React, { useState } from \"react\"\nimport { Route, Link, withRouter } from \"react-router-dom\"\nimport People from \"./People/People\"\nimport Letters from \"./Letters/Letters\"\nimport { withStyles, AppBar, Tabs, Tab } from \"@material-ui/core\"\n\nconst styles = theme => {\n\tconst tabColor = theme.palette.primary[900]\n\n\treturn {\n\t\tTabs: {\n\t\t\tbackgroundColor: tabColor,\n\t\t\tcolor: theme.palette.getContrastText(tabColor),\n\t\t},\n\t}\n}\n\nconst AppRouter = props => {\n\tconst {\n\t\tlocation: { pathname },\n\t\tclasses,\n\t} = props\n\n\tconst pathnameMap = {\n\t\t\"/\": 0,\n\t\t\"/letters\": 1,\n\t}\n\n\tconst [page, setPage] = useState(pathnameMap[pathname])\n\n\treturn (\n\t\t<div>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Tabs\n\t\t\t\t\tclassName={classes.Tabs}\n\t\t\t\t\tvalue={page}\n\t\t\t\t\tvariant=\"fullWidth\"\n\t\t\t\t\tonChange={(change, value) => setPage(value)}\n\t\t\t\t>\n\t\t\t\t\t<Tab label=\"People\" component={Link} to=\"/\" />\n\t\t\t\t\t<Tab label=\"Letters\" component={Link} to=\"/letters\" />\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\n\t\t\t<Route path=\"/\" exact component={People} />\n\t\t\t<Route path=\"/letters\" component={Letters} />\n\t\t</div>\n\t)\n}\n\nexport default withRouter(withStyles(styles)(AppRouter))\n","import React, { useState } from \"react\"\nimport { BrowserRouter as Router, Route, withRouter } from \"react-router-dom\"\nimport AppRouter from \"./routes/AppRouter\"\nimport \"./App.scss\"\n\nconst App = () => {\n\tconst [selectedMinDate, setSelectedMinDate] = useState(undefined)\n\tconst [selectedMaxDate, setSelectedMaxDate] = useState(undefined)\n\n\tconst [page, setPage] = useState(0)\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<AppRouter />\n\t\t\t</Router>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\"\nimport { lightBlue } from \"@material-ui/core/colors\"\nimport App from \"./App\"\nimport \"./index.scss\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: lightBlue,\n\t},\n\ttypography: {\n\t\tuseNextVariants: true,\n\t},\n})\n\nReactDOM.render(\n\t<MuiThemeProvider theme={theme}>\n\t\t<App />\n\t</MuiThemeProvider>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}